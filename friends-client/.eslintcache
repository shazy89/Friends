[{"/Users/shazy/friends_app/friends-client/src/index.js":"1","/Users/shazy/friends_app/friends-client/src/localStorage.js":"2","/Users/shazy/friends_app/friends-client/src/App.js":"3","/Users/shazy/friends_app/friends-client/src/reducers/rootReducer.js":"4","/Users/shazy/friends_app/friends-client/src/reducers/auth.js":"5","/Users/shazy/friends_app/friends-client/src/reducers/users.js":"6","/Users/shazy/friends_app/friends-client/src/reducers/chat.js":"7","/Users/shazy/friends_app/friends-client/src/reducers/selectedFriend.js":"8","/Users/shazy/friends_app/friends-client/src/components/Routes.js":"9","/Users/shazy/friends_app/friends-client/src/components/Login.js":"10","/Users/shazy/friends_app/friends-client/src/components/Network.js":"11","/Users/shazy/friends_app/friends-client/src/components/NavBar.js":"12","/Users/shazy/friends_app/friends-client/src/components/Signup.js":"13","/Users/shazy/friends_app/friends-client/src/components/Home.js":"14","/Users/shazy/friends_app/friends-client/src/components/Notfound.js":"15","/Users/shazy/friends_app/friends-client/src/actions/auth.js":"16","/Users/shazy/friends_app/friends-client/src/components/user/Settings.js":"17","/Users/shazy/friends_app/friends-client/src/components/LoadingPage.js":"18","/Users/shazy/friends_app/friends-client/src/components/cards/AllUsersCard.js":"19","/Users/shazy/friends_app/friends-client/src/components/cards/SideCard.js":"20","/Users/shazy/friends_app/friends-client/src/components/cards/ChatCard.js":"21","/Users/shazy/friends_app/friends-client/src/components/cards/UserBioCard.js":"22","/Users/shazy/friends_app/friends-client/src/components/cards/UserProfileCard.js":"23","/Users/shazy/friends_app/friends-client/src/components/user/UserInfo.js":"24","/Users/shazy/friends_app/friends-client/src/components/cards/FriendsAvatarContent.js":"25","/Users/shazy/friends_app/friends-client/src/components/cards/UserEditModal.js":"26","/Users/shazy/friends_app/friends-client/src/actions/chats.js":"27","/Users/shazy/friends_app/friends-client/src/components/cards/message/MessageCard.js":"28","/Users/shazy/friends_app/friends-client/src/components/cards/CollectionUserFriends.js":"29"},{"size":1170,"mtime":1606932081126,"results":"30","hashOfConfig":"31"},{"size":484,"mtime":1606932081126,"results":"32","hashOfConfig":"31"},{"size":279,"mtime":1606932081112,"results":"33","hashOfConfig":"31"},{"size":254,"mtime":1606932081127,"results":"34","hashOfConfig":"31"},{"size":1522,"mtime":1607007120940,"results":"35","hashOfConfig":"31"},{"size":339,"mtime":1606932081127,"results":"36","hashOfConfig":"31"},{"size":603,"mtime":1606932081127,"results":"37","hashOfConfig":"31"},{"size":319,"mtime":1606932081127,"results":"38","hashOfConfig":"31"},{"size":3139,"mtime":1606932081124,"results":"39","hashOfConfig":"31"},{"size":3557,"mtime":1607011711841,"results":"40","hashOfConfig":"31"},{"size":1285,"mtime":1606932081123,"results":"41","hashOfConfig":"31"},{"size":1387,"mtime":1606932081123,"results":"42","hashOfConfig":"31"},{"size":3411,"mtime":1607011735901,"results":"43","hashOfConfig":"31"},{"size":958,"mtime":1606932081123,"results":"44","hashOfConfig":"31"},{"size":94,"mtime":1606932081123,"results":"45","hashOfConfig":"31"},{"size":2458,"mtime":1607013164882,"results":"46","hashOfConfig":"31"},{"size":799,"mtime":1606932081126,"results":"47","hashOfConfig":"31"},{"size":639,"mtime":1606932081123,"results":"48","hashOfConfig":"31"},{"size":2218,"mtime":1607012962905,"results":"49","hashOfConfig":"31"},{"size":648,"mtime":1606932081125,"results":"50","hashOfConfig":"31"},{"size":3367,"mtime":1606951470231,"results":"51","hashOfConfig":"31"},{"size":772,"mtime":1606932081125,"results":"52","hashOfConfig":"31"},{"size":1968,"mtime":1606932081125,"results":"53","hashOfConfig":"31"},{"size":2443,"mtime":1606948760952,"results":"54","hashOfConfig":"31"},{"size":1571,"mtime":1606950156276,"results":"55","hashOfConfig":"31"},{"size":4006,"mtime":1607008119262,"results":"56","hashOfConfig":"31"},{"size":1535,"mtime":1606932081112,"results":"57","hashOfConfig":"31"},{"size":1880,"mtime":1606951534013,"results":"58","hashOfConfig":"31"},{"size":1747,"mtime":1606932081124,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1isdftx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},"/Users/shazy/friends_app/friends-client/src/index.js",[],["133","134"],"/Users/shazy/friends_app/friends-client/src/localStorage.js",[],"/Users/shazy/friends_app/friends-client/src/App.js",[],"/Users/shazy/friends_app/friends-client/src/reducers/rootReducer.js",[],"/Users/shazy/friends_app/friends-client/src/reducers/auth.js",[],"/Users/shazy/friends_app/friends-client/src/reducers/users.js",["135"],"export default (state={users: [], loading: true }, action) => {\n  \n    switch(action.type) {\n        case \"POPULATE_USERS\":\n            \n            return {\n               ...state, \n               users:  action.users ,\n               loading: false };\n               \n               default:\n                return state;\n      }  \n  }\n","/Users/shazy/friends_app/friends-client/src/reducers/chat.js",["136"],"export default (state={activeChatMessages: [], activeChat: '', loading: true }, action) => {\n  \n    switch(action.type) {\n        case \"LOAD_CHAT\":\n            \n            return {\n            activeChatMessages: action.chat.messages,\n            activeChat: action.chat.chat,\n            loading: false\n        };\n         case 'MESSAGE': \n         let msg = action.message.slice(-1)[0]\n\n            return {\n             ...state,\n             activeChatMessages: [...state.activeChatMessages, msg]\n            }  \n               \n               default:\n                return state;\n      }  \n  }\n\n","/Users/shazy/friends_app/friends-client/src/reducers/selectedFriend.js",["137"],"\nexport default (state={friend: null }, action) => {\n  \n    switch(action.type) {\n        case \"SELECT_FRIEND\":\n            \n            return {\n               ...state, \n               friend:  action.friendInfo \n                 };\n               \n               default:\n                return state;\n      }  \n  }\n","/Users/shazy/friends_app/friends-client/src/components/Routes.js",[],"/Users/shazy/friends_app/friends-client/src/components/Login.js",["138","139","140","141"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {Row, TextInput, Icon, Col, Card, CardTitle, Button} from 'react-materialize'\nimport {loadCurrentUser} from '../actions/auth'\nimport { connect } from 'react-redux';\nimport {Link, NavLink} from 'react-router-dom'\nimport vid from '../assets/myVid.mp4'\n\nclass Login extends Component {\n  //static propTypes = {\n  //  setLoggedInUser: PropTypes.func.isRequired,\n  //};\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      credentials: {\n        username: \"\",\n        password: \"\"\n      }\n    }\n  }\n\n  formListener = (event) => {\n    let value = event.target.value\n    let name = event.target.name\n    let currentCredState = Object.assign({},this.state.credentials)\n    currentCredState[name] = value\n    this.setState({\n      credentials: currentCredState\n    })\n    console.log(this.state)\n  }\n\n  setLoggedInUser = (user) => {\n\n     localStorage.setItem('token', user.token)\n     this.setState({\n       auth: {\n         user: {\n           username: user.username,\n           id: user.id\n         },\n         loggingIn: false\n       }\n     })\n     this.props.loadCurrentUser(this.state.auth.user)\n }\n\nloginUser = (event) => {\n  event.preventDefault()\n  const token = localStorage.getItem('token')\n\n  return fetch(\"http://localhost:3001/login\", {\n    method: 'POST',\n    headers:  {\n      'Content-Type': 'application/json',\n      Accepts: 'application/json',\n      Authorization: token\n    },\n    body: JSON.stringify(this.state.credentials)\n  })\n  .then(response => response.json())\n  .then(res => {\n    if (res.error) {\n      alert(res.error)\n    }\n    else {\n      \n      this.setLoggedInUser(res)\n      window.location = '/'\n    }\n  })\n}\n\n  render() {\nreturn (\n<div >\n<video autoPlay loop muted \n   s={12}\nstyle={{\n   position: 'absolute',\n   width: '100%',\n   left: '50%',\n   right: '50%',\n   height: '100%',\n   objectFit: 'cover',\n   transform: 'translate(-50%, -50%)',\n   zIndex: '-1',\n   marginTop: '280px',\n\n\n  }}\n   \n   >\n   <source src={vid} type='video/mp4' />\n</video>\n\n <Row  >\n \n   <Col \n       className='center container'\n       style={{marginLeft: 'auto', marginTop: 'auto', float: 'none', marginTop: '10%'}}\n   >\n     <Card\n     \n       closeIcon={<Icon>close</Icon>}\n       header={<h1 style={{fontFamily: 'cursive'}}>friends</h1>}\n       revealIcon={<Icon>more_vert</Icon>}\n       title=\"LogIn\"\n\n     >\n   \n        <TextInput \n            s={12}\n       \n            placeholder=\"username\"\n            type=\"text\"\n            name=\"username\"\n            onChange={this.formListener}\n          />\n        <TextInput \n            s={12}\n        \n            placeholder=\"password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={this.formListener}\n            />\n         <Button placeholder=\"submit\" type=\"submit\"  \n           onClick={this.loginUser}\n            node=\"button\"\n            waves=\"light\"\n            className=\"waves-effect orange btn\"\n            ><Icon right> check</Icon>\n              LogIn\n          </Button>\n         <p>\n           <NavLink to='/signup'>\n             Don't have an account? Sign Up\n           </NavLink >\n         </p>\n       </Card>\n     </Col>\n   </Row>\n </div>\n   )\n     }};\n     function mapStateToProps(user) {\n    \n      return {\n       // user: user.auth.user.user,\n       // friends: user.auth.friends,\n       // chats: user.auth.chats,\n      }\n    }\n    export default connect(mapStateToProps, {loadCurrentUser})(Login);\n\n \n           \n\n\n\n\n           \n\n\n           ","/Users/shazy/friends_app/friends-client/src/components/Network.js",["142"],"import React from 'react'\nimport { Row , Col} from 'react-materialize'\nimport AllUsersCard from './cards/AllUsersCard'\nimport LoadingPage from './LoadingPage'\nimport { connect } from 'react-redux';\n\nconst Network = ({users, currentUser, loading, history}) => {\n\n if(!loading && currentUser.loggedIn){\n   const frnds = currentUser.friends.map(fr => parseInt(fr.friend_id))\n  const list = users.filter(user => {\nreturn !frnds.includes(user.id) && currentUser.user.user.id !== user.id}).map(user => {\n  return <AllUsersCard key={user.id} potentialFriend={user} currentUser={currentUser} history={history} />});\n  \n  return (\n     <div className='container' > \n        <h4 className='center' style={{fontFamily: 'serif'}}>People you may want to connect</h4>\n       <Row >\n            {list}\n       </Row> \n     </div>\n    )\n  }\n     \n  if(loading && !currentUser.loggedIn){\n    return (\n        <div>\n          <LoadingPage />\n        </div>\n    )\n  }};\n    \n  function mapStateToProps(users) {\n      return {\n           users: users.users.users,\n           currentUser: users.auth,\n           loading: users.users.loading\n          }\n   }\n   export default connect(mapStateToProps, null)(Network);\n    \n    \n   \n  \n          \n              \n   \n         \n     \n          \n    \n        \n\n\n","/Users/shazy/friends_app/friends-client/src/components/NavBar.js",["143","144","145"],"import React, {useState} from 'react'\nimport {Navbar, NavItem, Icon} from 'react-materialize'\nimport { connect } from 'react-redux'\nimport Login from './Login'\nimport {Link, NavLink} from 'react-router-dom'\n\nconst NavBar = ({user, logOutUser}) => {\n \n  \n     return (\n        <div>\n          <Navbar\n             alignLinks=\"right\"\n             className='3f51b5 indigo'\n             brand={<NavLink style={{fontFamily: 'cursive'}} to=\"/\"> friends </NavLink>}\n             centerChildren\n             id=\"mobile-nav\"\n             menuIcon={<Icon>menu</Icon>}\n             options={{\n             draggable: true,\n             edge: 'left',\n             inDuration: 250,\n             onCloseEnd: null,\n             onCloseStart: null,\n             onOpenEnd: null,\n             onOpenStart: null,\n             outDuration: 200,\n             preventScrolling: true\n           }}\n         >\n      <NavItem >\n         <NavLink to=\"/network\"><Icon>supervisor_account</Icon> network </NavLink>\n      </NavItem>\n      <NavItem >\n         <NavLink to=\"/settings\"><Icon>settings</Icon> settings </NavLink>\n      </NavItem>\n        <NavItem onClick={e => logOutUser(e)}>\n          Logout \n        </NavItem>\n     </Navbar>\n   </div>\n)};\n        \n\nconst mapStateToProps = usr => {\n        \n      return {\n        user: usr.auth\n      }\n    }\n    \nexport default connect(mapStateToProps)(NavBar);\n\n\n","/Users/shazy/friends_app/friends-client/src/components/Signup.js",["146","147","148"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {Row, TextInput, Icon, Col, Card, CardTitle, Button} from 'react-materialize'\nimport {loadCurrentUser} from '../actions/auth'\nimport { connect } from 'react-redux';\nimport {Link, NavLink} from 'react-router-dom'\nimport vid from '../assets/myVid.mp4'\n\nclass Signup extends Component {\n  static propTypes = {\n    setLoggedInUser: PropTypes.func.isRequired,\n  };\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      credentials: {\n        username: \"\",\n        password: \"\"\n      }\n    }\n  }\n  setLoggedInUser = (user) => {\n    localStorage.setItem('token', user.token)\n    this.setState({\n      auth: {\n        user: {\n          username: user.username,\n          id: user.id\n        },\n        loggingIn: false\n      }\n    })\n    this.props.loadCurrentUser(this.state.auth.user)\n}\n\n\n  formListener = (event) => {\n    const {name, value} = event.target\n    let currentCredState = Object.assign({},this.state.credentials)\n \n    currentCredState[name] = value\n    this.setState({\n      credentials: currentCredState\n    })\n    console.log(this.state)\n  }\n\n  signUpUser = (event) => {\n  event.preventDefault()\n  fetch(\"http://localhost:3001/signup\", {\n    method: 'POST',\n    headers:\n    {\n      'Content-Type': 'application/json',\n      Accepts: 'application/json',\n    },\n    body: JSON.stringify({user: this.state.credentials})\n  })\n    .then(res => res.json())\n    .then(resp => {\n      if (resp.error) {\n        alert(resp.error)\n      } else {\n        this.props.setLoggedInUser(resp)\n        this.props.history.push('/')\n      }\n    })\n    }\n  render() {\nreturn (\n<div >\n<video autoPlay loop muted \n   s={12}\nstyle={{\n   position: 'absolute',\n   width: '100%',\n   left: '50%',\n   right: '50%',\n   height: '100%',\n   objectFit: 'cover',\n   transform: 'translate(-50%, -50%)',\n   zIndex: '-1',\n   marginTop: '280px',\n\n\n  }}\n   \n   >\n   <source src={vid} type='video/mp4' />\n</video>\n\n <Row  >\n \n   <Col \n       className='center container'\n       style={{marginLeft: 'auto', marginTop: 'auto', float: 'none', marginTop: '10%'}}\n   >\n     <Card\n       \n       closeIcon={<Icon>close</Icon>}\n       header={<h1 style={{fontFamily: 'cursive'}}>friends</h1>}\n       revealIcon={<Icon>more_vert</Icon>}\n       title=\"SignUp\"\n\n     >\n        <TextInput \n            s={12}\n       \n            placeholder=\"username\"\n            type=\"text\"\n            name=\"username\"\n            onChange={this.formListener}\n          />\n        <TextInput \n            s={12}\n        \n            placeholder=\"password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={this.formListener}\n            />\n         <Button placeholder=\"submit\" type=\"submit\"  \n           onClick={this.signUpUser}\n            node=\"button\"\n            waves=\"light\"\n            className=\"waves-effect orange btn\"\n            ><Icon right> check</Icon>\n              SignUp\n          </Button>\n         <p>\n           <NavLink to='/login'>\n           Already have an account? Log in\n           </NavLink >\n         </p>\n       </Card>\n     </Col>\n   </Row>\n </div>\n )}\n};\n\nfunction mapStateToProps(user) {\n\n  return {\n  //  user: state.auth.user,\n  //  friends: state.user.friends,\n  //  chats: state.user.chats,\n  }\n}\nexport default (connect(mapStateToProps, {loadCurrentUser})(Signup));\n\n\n\n\n\n\n\n\n           \n\n           \n \n","/Users/shazy/friends_app/friends-client/src/components/Home.js",[],"/Users/shazy/friends_app/friends-client/src/components/Notfound.js",[],"/Users/shazy/friends_app/friends-client/src/actions/auth.js",[],"/Users/shazy/friends_app/friends-client/src/components/user/Settings.js",["149","150"],"import React from 'react'\nimport { Collapsible, CollapsibleItem, Icon, Col, Card, Row, Textarea} from 'react-materialize'\nimport UserInfo from './UserInfo'\n\nconst Settings = ({history}) => {\n\nreturn (\n    <div className='center container'>\n     <Col m={10} l={10} s={12}>\n     <Card \n           className=\"fafafa grey lighten-5\"\n           closeIcon={<Icon>close</Icon>}\n           revealIcon={<Icon>more_vert</Icon>}\n           textClassName=\"black-text\"\n           title=\"General Settings\" >\n     <Collapsible accordion={false} >\n     <CollapsibleItem  \n       expanded={true}\n       header=\"User Info\"\n       icon={<Icon>person</Icon>}\n       node=\"div\"\n     >\n    <UserInfo history={history}/>\n  </CollapsibleItem>\n</Collapsible>\n</Card>\n</Col>   \n    </div>\n)\n};\n    \n\n\nexport default Settings;","/Users/shazy/friends_app/friends-client/src/components/LoadingPage.js",[],"/Users/shazy/friends_app/friends-client/src/components/cards/AllUsersCard.js",[],"/Users/shazy/friends_app/friends-client/src/components/cards/SideCard.js",[],"/Users/shazy/friends_app/friends-client/src/components/cards/ChatCard.js",["151","152"],"import React, {useState, useEffect, useRef} from 'react';\nimport { bindActionCreators } from 'redux';\nimport * as Actions from '../../actions/chats'\nimport { Icon, Col, Card, Textarea, Button, Chip, Row} from 'react-materialize'\nimport {connect} from 'react-redux'\nimport bgImg from '../../assets/bgImg.png'\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nimport Message from './message/MessageCard'\nimport ScrollableFeed from 'react-scrollable-feed'\n\nconst ChatCard = ({friend, chat, user, newMessage, fetchActiveChatInfo, activeChatMessages}) => {\n\nconst [message, setMessage] = useState('')\n\nconst handleNewMessageSubmit = (e) => {\n    e.preventDefault()\n    newMessage(message, chat, user)\n    setMessage('')\n }\n let msg = activeChatMessages.map(message => <Message key={message.id} message={message} />)\n \n\n  return (\n <div >\n  <ActionCableConsumer channel={{channel: 'FeedChannel'}} onReceived={ () => {\n    fetchActiveChatInfo(chat)\n            }\n          } />\n      <Col m={8} l={8} s={12} >\n        <Card \n          style={{ borderRadius: '5%'}}\n          revealIcon={<Icon>edit</Icon>}  \n             >\n            {friend ? <Chip \n                close={false}\n                closeIcon={<Icon className=\"close\">close</Icon>}\n                options={null} >\n                   <img\n                     alt=\"Contact Person\"\n                     className=\"responsive-img\"\n                     src={friend.avatar}\n                   />\n                     <ActionCableConsumer channel={{channel: 'FeedChannel'}} onReceived={ () => {\n                   fetchActiveChatInfo(chat)\n                 }\n          } />\n                <span style={{fontFamily: 'cursive'}}>{friend.username} </span>\n           </Chip> : null }\n             <div style={{resize: 'none', overflowY: 'scroll', height:'300px', backgroundImage: `url(${bgImg})`}}>\n             <ScrollableFeed>\n               {msg}\n               </ScrollableFeed>\n             \n             </div> \n          <Card\n          style={{ borderRadius: '5%', resize: 'none', overflowY: 'scroll', height:'100px' }}\n          revealIcon={<Icon>edit</Icon>}  \n             > \n             <Row>\n                <Textarea  id=\"Textarea-12\" l={10}  m={10} s={9} xl={10} placeholder='Type a message...'\n                     onKeyPress={event => event.key === 'Enter' ? handleNewMessageSubmit(event) : null}\n                     onChange={e => setMessage(e.target.value)} value={message}/>\n                <Button flat onClick={handleNewMessageSubmit} ><Icon className=\"close\" type='submit'>send</Icon></Button>\n               </Row>\n        </Card> \n    </Card>\n  </Col>\n</div>\n )\n}\n       \nconst mapDispatchToProps = dispatch => {\n return bindActionCreators(Actions, dispatch);\n}\n\nconst mapStateToProps = store => {\n    return {\n       friend: store.selectedFriend.friend,\n       chat: store.chat.activeChat,\n       user: store.auth.user.user,\n       activeChatMessages: store.chat.activeChatMessages,\n       activeChat: store.chat.activeChat\n\n    }\n }\n   \n\n export default connect(mapStateToProps, mapDispatchToProps)(ChatCard);\n\n   \n        \n\n                  \n\n   \n   \n        \n \n                \n           \n            \n\n\n                  \n    \n  \n\n\n\n\n                \n\n         \n           \n         \n          \n    \n       \n   \n   \n  \n \n \n                \n\n\n\n      \n\n        \n   \n \n","/Users/shazy/friends_app/friends-client/src/components/cards/UserBioCard.js",["153"],"import React from 'react'\nimport { Icon, Card, Col} from 'react-materialize'\nimport {Link, NavLink} from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst UserBioCard = ({user}) => {\n\nreturn (\n<div>\n<Col m={9} l={9} xl={9} s={12}>  \n<Card\n\n      className=\"e8eaf6 indigo lighten-5\"\n      closeIcon={<Icon>close</Icon>}\n      revealIcon={<Icon>more_vert</Icon>}\n      textClassName=\"black-text\"\n      title=\"About\"\n    >\n      <NavLink to='/settings'><Icon className ='right'>create</Icon></ NavLink>\n      <div>\n         {user.about}\n      </div>\n    </Card>\n  </ Col>  \n</div>\n)};\n     \nconst mapStateToProps = usr => {\n  return {\n    user: usr.auth.user.user,\n    loggedIn: usr.auth.loggedIn \n  }\n};\n\nexport default connect(mapStateToProps)(UserBioCard);\n","/Users/shazy/friends_app/friends-client/src/components/cards/UserProfileCard.js",[],"/Users/shazy/friends_app/friends-client/src/components/user/UserInfo.js",["154"],"import React, {useState} from 'react'\nimport { Button, TextInput, Icon, Textarea} from 'react-materialize'\nimport {connect} from 'react-redux'\n\n\nconst UserInfo = ({userEditFunction, user, history}) => {\n\nconst [name, setName] = useState(user.name ? user.name : '')\nconst [publicEmail, setPublicEmail] = useState(user.public_email ? user.public_email : '')\nconst [url, setUrl] = useState(user.url ? user.url : '')\nconst [about, setAbout] = useState(user.about ? user.about : '')\nconst [id, setId] = useState(user.id)\n\nconst handleUpdate = (e) => {\n    e.preventDefault()\n    const user = {\n        user_id: id,\n        name: name,\n        public_email: publicEmail,\n        url: url,\n        about: about\n    }\n    \n   const updateUserInfo = (userInfo) => {\n       \n       fetch(`http://localhost:3001/users/${userInfo.user_id}`, {\n         method: \"PATCH\",\n         headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n         },\n         body: JSON.stringify(userInfo)\n     })\n     .then( resp => resp.json() )\n     .then( user => { \n         userEditFunction(user)\n         history.push('/')\n     })\n }\n updateUserInfo(user)\n}\n\n      \nreturn (\n    <div>\n        <form onSubmit={handleUpdate}>\n        <TextInput\n          id=\"TextInput-4\"\n         label=\"Name\" \n          onChange={e => setName(e.target.value)}\n          value={name}\n         />\n        <TextInput\n          id=\"TextInput-3\"\n         label=\"Public email\" \n         onChange={e => setPublicEmail(e.target.value)}\n         value={publicEmail}\n         />\n        <TextInput\n          id=\"TextInput-2\"\n         label=\"URL \" \n         onChange={e => setUrl(e.target.value)}\n         value={url}\n         />\n        <Textarea\n          id=\"Textarea-1\"\n         label=\"About \" \n         onChange={e => setAbout(e.target.value)}\n         value={about}\n         />\n          <br />\n        <Button  placeholder=\"submit\" className=\"3f51b5 indigo\"\n         type=\"submit\" node=\"button\"><Icon right> check</Icon>Update profile</Button> \n         \n        </form>\n    </div>\n )\n};\n       \nconst mapDispatchToProps = (dispatch) => {\n    return {\n      userEditFunction: (userInfo) => dispatch({ type: 'UPDATE_INFO', userInfo})\n    };\n  };\n\n   const mapStateToProps = usr => {\n       return {\n           user: usr.auth.user.user\n       }\n    }\n      \nexport default connect(mapStateToProps, mapDispatchToProps )(UserInfo);\n\n\n          \n\n\n","/Users/shazy/friends_app/friends-client/src/components/cards/FriendsAvatarContent.js",[],"/Users/shazy/friends_app/friends-client/src/components/cards/UserEditModal.js",["155","156"],"import React, { useState } from 'react'\nimport { Modal, Button, Icon, TextInput} from 'react-materialize'\nimport {connect} from 'react-redux'\nexport const USER_AVATAR = 'USER_AVATAR'\n\n\nconst UserEditModal = (props) => {\n\n    const [selectedFile, setSelectedFile] = useState();\n    const [previewSource, setPreviewSource] = useState(props.currentUser.user.avatar);\n    const [img, setImg] = useState(\"\");\n    const [username, setUsername] = useState(props.currentUser.user.username);\n    const [userId, setUserId] = useState(props.currentUser.user.id);\n    \n    \n   const handleFileInputChange = (e) => {\n     \n       const file = e.target.files[0];\n       previewFile(file);\n       setSelectedFile(file);\n\n        setImg(e.target.value);\n    };\n\n   const previewFile = (file) => {\n       const reader = new FileReader();\n       reader.readAsDataURL(file);\n       reader.onloadend = () => {\n           setPreviewSource(reader.result);\n       };\n   };\n   \n\n   const handleSubmit = e => {\n       \n       e.preventDefault();\n       if (!selectedFile) return;\n         const reader = new FileReader();\n         reader.readAsDataURL(selectedFile);\n\n          reader.onloadend = () => {\n           const user = {\n             \n               username: username, \n               reader: reader.result,\n               user_id: userId \n             }\n             const userEditFunction = (userData, history) => {   \n              \n               fetch(`http://localhost:3001/avatar/${userData.user_id}`, {\n                   method: \"PATCH\",\n                   headers: {\n                       'Accept': 'application/json',\n                       'Content-Type': 'application/json'\n                   },\n                   body: JSON.stringify(userData)\n               })\n               .then( resp => resp.json() )\n               .then( user => { debugger\n                 props.userEditFunction(user)\n                 props.history.push('/')\n             })\n           }\n           userEditFunction(user)\n         }  \n      }\n      return (\n      <Modal\n        actions={[\n           <Button flat modal=\"close\" \n              node=\"button\" waves=\"green\">Close</Button>,      \n              <Button  onClick={handleSubmit} placeholder=\"submit\" className=\"waves-effect orange btn\"\n              type=\"submit\" node=\"button\"><Icon right> check</Icon>Change</Button>\n      ]}\n      bottomSheet={false}\n      fixedFooter={false}\n      header=\"UserEdit\"\n      id=\"Modal-0\"\n      open={false}\n      options={{\n        dismissible: true,\n        endingTop: '10%',\n        inDuration: 250,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        opacity: 0.3,\n        outDuration: 250,\n        preventScrolling: true,\n        startingTop: '4%'\n      }}\n      \n      trigger={  \n           <Button  className='right'\n             flat  \n             icon={<Icon >portrait</Icon>}\n             node=\"button\"\n             waves=\"red\"\n           />} >\n    \n    <form onSubmit={handleSubmit}>\n\n       <TextInput id=\"TextInput-4\" label=\"new img\" s={4} m={4} l={4} xl={4} name=\"img\"  \n         type=\"file\"  value= {img} onChange={handleFileInputChange}/>\n         {previewSource && ( <img src={previewSource} alt=\"chosen\" style={{ height: '100px' }}  />)}\n           </form>\n    </Modal>\n  )\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    userEditFunction: (userInfo) => dispatch({ type: USER_AVATAR, userInfo})\n  };\n};\n\nfunction mapStateToProps(users) {\n  return {\n      currentUser: users.auth.user,\n      loggedIn: users.auth.loggedIn\n      \n      }\n}\n    \nexport default connect(mapStateToProps, mapDispatchToProps)(UserEditModal);\n               \n  \n          \n         \n\n  // <TextInput id=\"TextInput-4\" style={{width: '50%'}} s={5} m={4} l={4} xl={4} value={username}\n  // placeholder='username' label=\"username\" name=\"username\" onChange={e => setUsername(e.target.value)}/>\n             \n\n  \n\n\n\n  \n                \n\n\n     \n    \n\n\n\n    \n    \n   \n  \n","/Users/shazy/friends_app/friends-client/src/actions/chats.js",[],"/Users/shazy/friends_app/friends-client/src/components/cards/message/MessageCard.js",[],"/Users/shazy/friends_app/friends-client/src/components/cards/CollectionUserFriends.js",["157"],"import React, {useEffect} from 'react'\nimport { CollectionItem} from 'react-materialize';\nimport {connect} from 'react-redux'\nimport { bindActionCreators } from 'redux';\nimport * as Actions from '../../actions/chats'\nimport LoadingPage from '../LoadingPage'\nconst CollectionUserFriends = ({friend, selectFriend, activeChatInfo, currentUser, loggedIn}) => {\n    \n if(loggedIn){\n     \n    const activeChat = currentUser.chats.find(chat => { \n        return friend.chats.map(c => parseInt(c.id)).includes(chat.chat.id)\n    })\n\n  const handleChatWithUser = e => {\n      e.preventDefault()\n      selectFriend(friend)\n      activeChatInfo(activeChat.chat)\n  }\n\n return (\n    <div onClick={handleChatWithUser} \n          onMouseEnter={e => {\n            e.target.style.backgroundColor = 'GhostWhite' \n          }}\n          onMouseLeave={e => {\n            e.target.style.backgroundColor = ''\n          }}\n          >\n        \n       <CollectionItem id={friend.id} className=\"avatar\"  \n         style={{borderBottomColor: 'darkgray', cursor: 'pointer'}}>\n          <img\n            src={friend.avatar}\n            className=\"circle\"\n            alt={friend.username}\n          />\n          <span className=\"name\" style={{fontFamily: 'serif'}}>\n          {friend.username}\n          </span> \n       </CollectionItem>\n    </div>\n)} \n  if(!loggedIn){\n      return (\n          <div>\n            <LoadingPage />\n          </div>\n      )\n  }\n}\n\nconst mapStateToProps = usr => {\n    return {\n      currentUser: usr.auth,\n      loggedIn: usr.auth.loggedIn\n    }\n  };\n      \nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators(Actions, dispatch);\n   }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionUserFriends)\n\n      \n",["158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":1,"nodeType":"166","endLine":14,"endColumn":4},{"ruleId":"164","severity":1,"message":"165","line":1,"column":1,"nodeType":"166","endLine":22,"endColumn":4},{"ruleId":"164","severity":1,"message":"165","line":2,"column":1,"nodeType":"166","endLine":15,"endColumn":4},{"ruleId":"167","severity":1,"message":"168","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":17},{"ruleId":"167","severity":1,"message":"171","line":3,"column":42,"nodeType":"169","messageId":"170","endLine":3,"endColumn":51},{"ruleId":"167","severity":1,"message":"172","line":6,"column":9,"nodeType":"169","messageId":"170","endLine":6,"endColumn":13},{"ruleId":"173","severity":1,"message":"174","line":103,"column":70,"nodeType":"175","messageId":"176","endLine":103,"endColumn":79},{"ruleId":"167","severity":1,"message":"177","line":2,"column":16,"nodeType":"169","messageId":"170","endLine":2,"endColumn":19},{"ruleId":"167","severity":1,"message":"178","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":24},{"ruleId":"167","severity":1,"message":"179","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":13},{"ruleId":"167","severity":1,"message":"172","line":5,"column":9,"nodeType":"169","messageId":"170","endLine":5,"endColumn":13},{"ruleId":"167","severity":1,"message":"171","line":3,"column":42,"nodeType":"169","messageId":"170","endLine":3,"endColumn":51},{"ruleId":"167","severity":1,"message":"172","line":6,"column":9,"nodeType":"169","messageId":"170","endLine":6,"endColumn":13},{"ruleId":"173","severity":1,"message":"174","line":97,"column":70,"nodeType":"175","messageId":"176","endLine":97,"endColumn":79},{"ruleId":"167","severity":1,"message":"180","line":2,"column":57,"nodeType":"169","messageId":"170","endLine":2,"endColumn":60},{"ruleId":"167","severity":1,"message":"181","line":2,"column":62,"nodeType":"169","messageId":"170","endLine":2,"endColumn":70},{"ruleId":"167","severity":1,"message":"182","line":1,"column":26,"nodeType":"169","messageId":"170","endLine":1,"endColumn":35},{"ruleId":"167","severity":1,"message":"183","line":1,"column":37,"nodeType":"169","messageId":"170","endLine":1,"endColumn":43},{"ruleId":"167","severity":1,"message":"172","line":3,"column":9,"nodeType":"169","messageId":"170","endLine":3,"endColumn":13},{"ruleId":"167","severity":1,"message":"184","line":12,"column":12,"nodeType":"169","messageId":"170","endLine":12,"endColumn":17},{"ruleId":"167","severity":1,"message":"185","line":12,"column":22,"nodeType":"169","messageId":"170","endLine":12,"endColumn":33},{"ruleId":"167","severity":1,"message":"186","line":13,"column":20,"nodeType":"169","messageId":"170","endLine":13,"endColumn":29},{"ruleId":"167","severity":1,"message":"182","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"160","replacedBy":"187"},{"ruleId":"162","replacedBy":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'CardTitle' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","'Col' is defined but never used.","'useState' is defined but never used.","'Login' is defined but never used.","'Row' is defined but never used.","'Textarea' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'setId' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'setUserId' is assigned a value but never used.",["189"],["190"],"no-global-assign","no-unsafe-negation"]